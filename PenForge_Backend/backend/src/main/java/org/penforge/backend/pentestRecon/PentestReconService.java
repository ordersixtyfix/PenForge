package org.penforge.backend.pentestRecon;

import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class PentestReconService {

    public List<String> runNmap(String targetIp) throws Exception {
        List<String> openPorts = new ArrayList<>();

        String command = String.format("nmap -sV %s", targetIp);
        ProcessBuilder processBuilder = new ProcessBuilder("wsl", "bash", "-c", command);
        processBuilder.redirectErrorStream(true);

        try {
            Process process = processBuilder.start();
            process.waitFor();

            try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
                String line;
                Pattern pattern = Pattern.compile("([0-9]+/tcp)\\s+open");

                while ((line = reader.readLine()) != null) {
                    System.out.println(line);
                    if (line.contains("Note: Host seems down. If it is really up, but blocking our ping probes, try -Pn")) {
                        throw new Exception("Host seems down or blocking ping probes.");
                    }
                    Matcher matcher = pattern.matcher(line);
                    if (matcher.find()) {
                        String port = matcher.group(1);
                        openPorts.add(port);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            throw new Exception("Error running Nmap: " + e.getMessage(), e);
        }

        return openPorts;
    }
}
