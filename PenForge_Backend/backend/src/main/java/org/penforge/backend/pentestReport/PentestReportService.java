package org.penforge.backend.pentestReport;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.thymeleaf.TemplateEngine;
import org.thymeleaf.context.Context;
import org.xhtmlrenderer.pdf.ITextRenderer;

import java.io.ByteArrayOutputStream;
import java.util.Optional;

@Service
@RequiredArgsConstructor
public class PentestReportService {

    private final TemplateEngine templateEngine;
    private final PentestReportRepository pentestReportRepository;

    public byte[] generatePdfFromData(String reportId) throws Exception {
        Optional<PentestReport> optionalPentestReport = pentestReportRepository.findById(reportId);

        if (!optionalPentestReport.isPresent()) {
            throw new IllegalArgumentException("Report with ID " + reportId + " not found");
        }

        PentestReport pentestReport = optionalPentestReport.get();

        Context context = new Context();
        context.setVariable("pentestReport", pentestReport);

        String htmlContent = templateEngine.process("test-report", context);

        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
            ITextRenderer renderer = new ITextRenderer();
            renderer.setDocumentFromString(htmlContent);
            renderer.layout();
            renderer.createPDF(outputStream);
            return outputStream.toByteArray();
        }
    }
}
